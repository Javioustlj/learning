* Introduction
1. What are the two main functions of an operating system?
2. In Section 1.4, nine different type of operating system are described. Give a list of applications for each of these systems (one per operating systems type).
3. What is the difference between timesharing and multiprogramming system?
4. To use cache memory, main memory is divided into cache lines, typically 32 or 64 bytes long. An entire cache line is cached at once. What is the advantage of caching an entire line instead of a single byte or word at a time?
5. On early computers, every byte of data read or written was handed by the CPU (i.e., there was no DMA). What implications does this have for multiprogramming?
6. Instruction related to accessing to I/O devices are typically privileged instructions, that is, they can be executed in kernel mode but not in user mode. Give a reason why these instructions are privileged.
7. The family-of-computers idea was introduced in the 1960s with the IBM System/360 mainframes. Is this idea now dead as a doornail or does it live on?
8. One reason GUIs were initially slow to be adopted was the cost of the hardware needed to support them. How much video RAM is needed to support a 25-line × 80-row character monochrome text screen? How much for a 1200 × 900-pixel 24-bit color bitmap? What was the cost of this RAM at 1980 prices ($5/KB)? How much is it now?
9. There are several design goals in building an operating system, for example, resource utilization, timeliness, robustness, and so on. Give an example of two design goals that may contradict one another.
10. What is the difference between kernel and user mode? Explain how having two distinct modes aids in designing an operating system.
11. A 255-GB disk has 65536 cylinders with 255 sectors per track and 512 bytes per sector. How many platters and heads does this disk have? Assuming an average cylinder seek time of 11 ms, average rotational delay of 7 msec and reading rate of 100 MB/sec, calculate the average time it will take to read 400 KB from one sector.
12. Which of the following instructions should be allowed only in kernel mode?
    - (a) Disable all interrupts.
    - (b) Read the time-of-day clock.
    - (c) Set the time-of-day clock.
    - (d) Changes the memory map.
13. Consider a system has two CPUs, each CPU having two threads (hyperthreading). Suppose three programs, /P0/, /P1/, and /P2/, are started with run time of 5, 10 and 20 msec, respectively. How long will it take to complete the execution of these programs? Assume that all three programs are 100% CPU bound, do not block during execution, and do not change CPUs once assigned.
14. A computer has a pipeline with four stages. Each stages take the same time to do its work, namely, 1 nsec. How many instructions per second can this machine execute?
15. Consider a computer system that has cache memory, main memory(RAM) and disk, and an operating system that uses virtual memory. It takes 1 nsec to access a word from the cache, 10 nsec to access a word from the RAM, and 10 ms to access a word from the disk. If the cache hit rate is 95% and main memory hit rate (after a cache miss) is 99%, what is the average time to access a word?
16. When a user program makes a system call to read or write a disk file, it provides an indication of which file it wants, a pointer to the data buffer, and the count. Control is then transferred to the operating system, which calls the appropriate driver. Suppose the driver starts the disk and terminates until an interrupt occurs. In the case of reading from the disk, obviously the caller will have to be blocked (because there are no data for it). What about the case of writing to the disk? Need the caller be blocked awaiting completion of the disk transfer？
17. What is a trap instruction? Explain its use in operating system.
18. Why is the process table needed in a timesharing system? Is it also needed in personal computer system running UNIX or Windows with a single user?
19. Is there any reason why you might want to mount a file system on a nonempty directory? If so, what is it?
20. For each of the following system calls, give a condition that causes it to fail: fork, exec, and unlink.
21. What type of multiplexing (time, space, or both) can be used for sharing the following resources: CPU, memory, disk, network card, printer, keyboard, and display?
22. Can the 
#+BEGIN_SRC c
count = write(fd, buffer, nbytes);
#+END_SRC
call return any value in count /count/ other than /nbytes/
23. A file whose file descriptor is /fd/ contains the following sequence of bytes: 3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5. The following system calls are made:
#+BEGIN_SRC c
Iseek(fd, 3, SEEK_SET);
read(fd, &buffer, 4);
#+END_SRC
where the Iseek call makes a seek to byte 3 of the file. What does /buffer/ contains after the read has completed?
